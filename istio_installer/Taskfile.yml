version: '2'

vars:
  CLUSTER_NAME: test
  CLUSTER_ZONE: europe-west1-d
  CLUSTER_USER: 
    sh: gcloud config get-value core/account

  VERSION_HELM: "2.10.0"
  VERSION_ISTIO: "1.0.2"

  INSTALL_TMP: /tmp/cluster_init
  CONFIG: "{{.PWD}}/values.yaml"

tasks:
  install:
    vars:
      IP_RANGES_WHITELIST:
        sh: gcloud container clusters describe {{.CLUSTER_NAME}} --zone={{.CLUSTER_ZONE}} | grep -e clusterIpv4Cidr -e servicesIpv4Cidr | awk '{{"{{print $2}}"}}' | sed ':a;N;$!ba;s/\n/\\,/g'

    cmds:
    - echo "{{.IP_RANGES_WHITELIST}}"
    - mkdir -p {{.INSTALL_TMP}}
    - wget -P {{.INSTALL_TMP}}/istio/ https://github.com/istio/istio/releases/download/{{.VERSION_ISTIO}}/istio-{{.VERSION_ISTIO}}-linux.tar.gz
    - tar xzf {{.INSTALL_TMP}}/istio/istio-{{.VERSION_ISTIO}}-linux.tar.gz -C {{.INSTALL_TMP}}/istio/
    - wget -P {{.INSTALL_TMP}}/helm/ https://storage.googleapis.com/kubernetes-helm/helm-v{{.VERSION_HELM}}-linux-amd64.tar.gz
    - tar xf {{.INSTALL_TMP}}/helm/helm-v{{.VERSION_HELM}}-linux-amd64.tar.gz -C {{.INSTALL_TMP}}/helm/

    - gcloud container clusters get-credentials {{.CLUSTER_NAME}} --zone {{.CLUSTER_ZONE}}
    - kubectl create clusterrolebinding cluster-admin-binding --clusterrole=cluster-admin --user={{.CLUSTER_USER}}

    - kubectl apply -f {{.INSTALL_TMP}}/istio/istio-{{.VERSION_ISTIO}}/install/kubernetes/helm/helm-service-account.yaml
    - "{{.INSTALL_TMP}}/helm/linux-amd64/helm init --service-account tiller && sleep 30"

    - kubectl create ns istio-system
    - helm template -n istio --namespace istio-system -f {{.INSTALL_TMP}}/istio/istio-{{.VERSION_ISTIO}}/install/kubernetes/helm/istio/values.yaml -f {{.CONFIG}} --set global.proxy.includeIPRanges="{{.IP_RANGES_WHITELIST}}" {{.INSTALL_TMP}}/istio/istio-{{.VERSION_ISTIO}}/install/kubernetes/helm/istio > {{.INSTALL_TMP}}/istio_config.yaml
    - kubectl apply -f {{.INSTALL_TMP}}/istio_config.yaml
    - kubectl label namespace default istio-injection=enable
        
    - rm -rf {{.INSTALL_TMP}}